{
  "name": "Education AI Curriculum",
  "children": [
    {
      "name": "General Knowledge",
      "children": [
        {
          "name": "Common Knowledge ",
          "children": [
            {
              "name": "Recognise different types of technology and their uses.",
              "value": 1
            },
            {
              "name": "Explain the concept of a epoch, a particular period of time in history or a person's life.",
              "value": 1
            },
            {
              "name": "Explain the concept of turning at an angle from your current orientation.",
              "value": 1
            },
            {
              "name": "Be able to find common angles from the view of two conjoining lines.",
              "value": 1
            },
            {
              "name": "Explain the features that make up a circle (centre, radius, diameter).",
              "value": 1
            },
            {
              "name": "Explain that an input or interface is a way to interact with a computer.",
              "value": 1
            }
          ]
        },
        {
          "name": "Computer Knowledge",
          "children": [
            {
              "name": "Explain that computer time is measure in total seconds from the last epoch (1st January 1970).",
              "value": 1
            },
            {
              "name": "Explain that typing and reading are measure in WPM (Word Per Minute).",
              "value": 1
            },
            {
              "name": "Explain an average and productive typing speed.",
              "value": 1
            },
            { "name": "Explain the concept of data.", "value": 1 },
            {
              "name": "Explain the difference between human and computer time.",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Hardware and Software",
      "children": [
        {
          "name": "Hardware",
          "children": [
            {
              "name": "Explain that hardware is the physical portion of a computer.",
              "value": 1
            },
            { "name": "Recognise different types of hardware.", "value": 1 },
            {
              "name": "Identify different pieces of hardware in Computer Systems.",
              "value": 1
            },
            {
              "name": "Explain a motherboard and its role to connect all other ascpects of a system.",
              "value": 1
            },
            {
              "name": "Explain a power supply  and its role to supply a system with adequate power.",
              "value": 1
            },
            {
              "name": "Explain a CPU (Central Processing Unit) and its role to process commands.",
              "value": 1
            },
            {
              "name": "Explain that a CPU fetches instruction from the memory.",
              "value": 1
            },
            { "name": "Explain examples of CPU instructions.", "value": 1 },
            {
              "name": "Explain a GPU (Graphical Processing Unit) and its role to process visual elements to a display.",
              "value": 1
            },
            {
              "name": "Explain memory and its role to retain information.",
              "value": 1
            },
            {
              "name": "Explain an SSD (Solid State Drive) and its role to store data.",
              "value": 1
            },
            { "name": "Explain an SSD is non-volatile.", "value": 1 },
            {
              "name": "Explain that an SSD is a non mechanical storage method.",
              "value": 1
            },
            {
              "name": "Explain a HDD (Hard Disk Drive) and its role to store data.",
              "value": 1
            },
            { "name": "Explain an HDD is non-volatile.", "value": 1 },
            {
              "name": "Explain that an HDD is a mechanical storage method.",
              "value": 1
            },
            {
              "name": "Compare and contrast a SSD and HDD as forms of storage.",
              "value": 1
            },
            {
              "name": "Explain RAM (Random Access Memory) and its role as a temporary but fast data store.",
              "value": 1
            },
            {
              "name": "Explain that RAM (Random Access Memory) is volatile.",
              "value": 1
            },
            {
              "name": "Compare and contrast volatile and non- volatile memory.",
              "value": 1
            }
          ]
        },
        {
          "name": "Software",
          "children": [
            { "name": "Explain different uses of software.", "value": 1 },
            {
              "name": "Describe the use of software in a computer system.",
              "value": 1
            }
          ]
        },
        {
          "name": "Relationship between Hardware and Software",
          "children": [
            {
              "name": "Compare the difference between software and hardware in computer systems.",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Variables ",
      "children": [
        {
          "name": "Variables Basic Concepts",
          "children": [
            {
              "name": "To understand how computers store information using Variables.",
              "value": 1
            },
            {
              "name": "Recognise the abstract idea of Memory Boxes (variables) to real-life situations.",
              "value": 1
            },
            {
              "name": "Explain Variables have a Name and a Value.",
              "value": 1
            },
            { "name": "Apply a Variable with a Name and a Value.", "value": 1 },
            {
              "name": "Explain Variables can only hold one Value at one time.",
              "value": 1
            },
            {
              "name": "Use assignment operator to assign a value to a variable, for instance variable = expression.",
              "value": 1
            },
            {
              "name": "Explain that a Variable Value can be updated using another Variable.",
              "value": 1
            },
            {
              "name": "Update a Variable value by another Variable using \"=\".",
              "value": 1
            },
            { "name": "Identify a valid variable name.", "value": 1 }
          ]
        },
        {
          "name": "Use of Variables",
          "children": [
            {
              "name": "Apply the use of Variables in Conditionals",
              "value": 1
            },
            { "name": "Apply the use of Variables in Loops", "value": 1 },
            { "name": "Apply the concept of Variables in algebra", "value": 1 }
          ]
        },
        {
          "name": "Local Variables",
          "children": [
            {
              "name": "Explain that subroutines may declare their own variables, called local variables.",
              "value": 1
            },
            {
              "name": "Recall that local variables only exist while the subroutine is executing",
              "value": 1
            },
            {
              "name": "Explain why local variables are only accessible within the subroutine",
              "value": 1
            },
            {
              "name": "Use local variables and explain why it is good practice to do so.",
              "value": 1
            }
          ]
        },
        {
          "name": "Global Variables",
          "children": [
            {
              "name": "Explain that global variables can be visited by all the subroutines in the program",
              "value": 1
            },
            {
              "name": "Explain if one subroutine changes a global variable, the new value will be seen by all the subroutines. ",
              "value": 1
            },
            {
              "name": "Demonstrate the difference between local variables and global variables.",
              "value": 1
            }
          ]
        },
        {
          "name": "Constants",
          "children": [
            {
              "name": "Explain that constants are the data that is unlikely to change.",
              "value": 1
            },
            {
              "name": "Explain that constants are the opposites of variables.",
              "value": 1
            },
            {
              "name": "Demonstrate the advantages of using named constants.",
              "value": 1
            }
          ]
        },
        {
          "name": "Variables Data Types",
          "children": [
            { "name": "Describe the definition of datatypes", "value": 1 },
            {
              "name": "Demonstrate a String (or str or text) is one of four datatypes that is used for a combination of any characters that appear on a keyboard, such as letters, numbers and symbols. ",
              "value": 1
            },
            {
              "name": "Demonstrate how to count characters in a string",
              "value": 1
            },
            {
              "name": "Demonstrate that an Integer (or Int) is one of four datatypes that is used for whole numbers",
              "value": 1
            },
            {
              "name": "Demonstrate that a Float (or Real) is one of four datatypes that is used for numbers that contain decimal points, or for fractions.",
              "value": 1
            },
            {
              "name": "Demonstrate a Boolean (or Bool) is one of four datatypes where data is restricted to True/False or Yes/No options.",
              "value": 1
            }
          ]
        },
        {
          "name": "Variable Casting",
          "children": [
            {
              "name": "Explain the concept of variable casting by converting a variable to different datatype",
              "value": 1
            },
            {
              "name": "Demonstrate convertion from a float or a String to an Integer",
              "value": 1
            },
            {
              "name": "Demonstrate convertion from an integer or a String to a Float",
              "value": 1
            },
            {
              "name": "Demonstrate convertion from a float or an integer to a String",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Data Handling",
      "children": [
        {
          "name": "Data Types",
          "children": [
            {
              "name": "Explain that data stored in variables or other data structures is of different types. ",
              "value": 1
            },
            {
              "name": "Identify typical data types: strings (texts and symbols), integers (whole numbers), floating point numbers (decimals) and Boolean.",
              "value": 1
            }
          ]
        },
        {
          "name": "Measuring tools and units",
          "children": [
            {
              "name": "Describe the common measuring tools and units for length",
              "value": 1
            },
            {
              "name": "Describe the common measuring tools and units for weight",
              "value": 1
            },
            {
              "name": "Describe the common measuring tools and units for volume and capacity",
              "value": 1
            },
            {
              "name": "Describe the common measuring tools and units for time",
              "value": 1
            },
            {
              "name": "Describe the common measuring tools and units for temperatures, angles and strength of sound",
              "value": 1
            }
          ]
        },
        {
          "name": "Data collection",
          "children": [
            {
              "name": "Describe the location and methods of data collection",
              "value": 1
            },
            {
              "name": "Explain that the raw data are hard to understand",
              "value": 1
            }
          ]
        },
        {
          "name": "Graphical Data Representation",
          "children": [
            { "name": "Interpret, draw and use bar charts", "value": 1 },
            { "name": "Interpret, draw and use pie charts", "value": 1 },
            { "name": "Interpret, draw and use line graphs", "value": 1 },
            { "name": "Define what a chart is", "value": 1 }
          ]
        },
        {
          "name": "Numerical Data Measures",
          "children": [
            {
              "name": "Explain Min and Max and the use of them in calculations",
              "value": 1
            },
            { "name": "Execute min and max calculations", "value": 1 },
            {
              "name": "Calculate the centre of the data, e.g., mean, median and mode",
              "value": 1
            },
            {
              "name": "Perform analysis by applying the centre of the data",
              "value": 1
            }
          ]
        },
        {
          "name": "File Handling",
          "children": [
            { "name": "Load a file from a file path", "value": 1 },
            { "name": "Close a file once actions are complete", "value": 1 },
            {
              "name": "Explain why a file should be closed once actions are complete",
              "value": 1
            },
            { "name": "Open a file in write or 'w' mode", "value": 1 },
            {
              "name": "Explain that writing into a file will overwrite the original content",
              "value": 1
            },
            { "name": "Open a file in append or 'a' mode", "value": 1 },
            {
              "name": "Explain that appending into a file will add new data to the end of the original file",
              "value": 1
            },
            {
              "name": "Be able to use the 'with' statement to automatically close a while once complete",
              "value": 1
            },
            {
              "name": "Explain how to read a file line by line compared to as whole",
              "value": 1
            },
            {
              "name": "Explain that a file is a collection of data",
              "value": 1
            },
            {
              "name": "Be able to identify when a program is reading or writing from a file",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Graphs",
      "children": [
        {
          "name": "Graphical Data Representation",
          "children": [
            {
              "name": "Explain what a Axis Label is and how it is displayed",
              "value": 1
            },
            {
              "name": "Explain what a Axis is and which direction it lays",
              "value": 1
            },
            { "name": "Explain what a graph Legend is", "value": 1 },
            { "name": "Be able to decern information for a graph", "value": 1 }
          ]
        },
        {
          "name": "Graph Basics",
          "children": [
            {
              "name": "Explain that Graphs include nodes and edges",
              "value": 1
            },
            {
              "name": "Demonstrate that Graphs can be directed and undirected graphs and edges can have weights",
              "value": 1
            },
            {
              "name": "Explain how Graph models are used in real life (e.g., maps, social media relationships, etc)",
              "value": 1
            }
          ]
        },
        {
          "name": "Graph Traverse",
          "children": [
            { "name": "Demonstrate a Breadth first search", "value": 1 },
            { "name": "Demonstrate a Depth first search ", "value": 1 }
          ]
        },
        {
          "name": "Graph Algorithms - Eulerian paths",
          "children": [
            { "name": "Describe the Königsberg Bridge Problem", "value": 1 },
            { "name": "Discuss in-degrees and out-degrees", "value": 1 },
            { "name": "Identify when an Eulerian path exists", "value": 1 },
            { "name": "Find an Eulerian path in a graph", "value": 1 }
          ]
        },
        {
          "name": "Graph Algorithms - Map Colouring Problems",
          "children": [
            { "name": "Discuss the map colouring problem", "value": 1 },
            {
              "name": "Model a map using a graph (with nodes and edges)",
              "value": 1
            },
            {
              "name": "Illustate that at most 4 colours are needed for any maps",
              "value": 1
            },
            { "name": "Colour some graphs with at most 4 colours", "value": 1 }
          ]
        },
        {
          "name": "Graph Algorithms - Tiling Problems",
          "children": [
            { "name": "Explain the tiling problem", "value": 1 },
            {
              "name": "Discuss why it is impossible to find a solution for some tiling problems",
              "value": 1
            },
            { "name": "Practise the tiling on some graphs", "value": 1 }
          ]
        },
        {
          "name": "Graph Algorithms - Shortest Path Problems",
          "children": [
            {
              "name": "Demonstrate the shortest path problem in a graph",
              "value": 1
            },
            {
              "name": "Demonstrate how to find the shortest path in a graph",
              "value": 1
            },
            { "name": "Find a shortest path in some simple graphs", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Sequencial Execution",
      "children": [
        {
          "name": "Sequence Basic Concepts",
          "children": [
            {
              "name": "Explain simple sequences are an order of events",
              "value": 1
            },
            { "name": "Arrange events in a desired order", "value": 1 }
          ]
        },
        {
          "name": "Sequence Concepts ",
          "children": [
            { "name": "Discuss optimisation of order", "value": 1 },
            {
              "name": "Find the correct positions to add new events in execution order",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Concurrent Execution",
      "children": [
        {
          "name": "Concurrent sequences",
          "children": [
            {
              "name": "Demonstrate how big tasks can be split into smaller interleaving  tasks",
              "value": 1
            },
            {
              "name": "Schedule the subtasks from big tasks to optimise the use of resources and improve fairness",
              "value": 1
            }
          ]
        },
        {
          "name": "Parallel sequences",
          "children": [
            {
              "name": "Explain that parallel two or more actions executing simultaneously",
              "value": 1
            },
            {
              "name": "Demonstrate that parallel two or more actions executing simultaneously",
              "value": 1
            },
            {
              "name": "Execute parallel execution in order to optimise tasks",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Operators",
      "children": [
        {
          "name": "Arithmetic Operators",
          "children": [
            {
              "name": "Demonstrate how arithmetic operators use one element on another",
              "value": 1
            },
            {
              "name": "Identify addition as one of the arithmetic operators",
              "value": 1
            },
            {
              "name": "Identify subtraction as one of the arithmetic operators",
              "value": 1
            },
            {
              "name": "Identify multiplication as one of the arithmetic operators",
              "value": 1
            },
            {
              "name": "Identify real division as one of the arithmetic operators",
              "value": 1
            },
            {
              "name": "Identify integer division as one of the arithmetic operators",
              "value": 1
            },
            { "name": "Operate using addition", "value": 1 },
            { "name": "Operate using subtraction", "value": 1 },
            { "name": "Operate using multiplication", "value": 1 },
            { "name": "Operate using real division", "value": 1 },
            { "name": "Operate using integer division", "value": 1 },
            { "name": "Explain a modulus operation", "value": 1 },
            {
              "name": "Determine the value of a variable through operations",
              "value": 1
            }
          ]
        },
        {
          "name": "Comparison Operators",
          "children": [
            {
              "name": "Demonstrate how comparison operators use one element on another",
              "value": 1
            },
            { "name": "Recognise the \"equal to\" operator", "value": 1 },
            { "name": "Recognise the \"not equal to\" operator", "value": 1 },
            { "name": "Recognise the \"less than\" operator", "value": 1 },
            { "name": "Recognise the \"greater than\" operator", "value": 1 },
            {
              "name": "Recognise the \"less than or equal to\" operator",
              "value": 1
            },
            {
              "name": "Recognise the \"greater than or equal to\" operator",
              "value": 1
            },
            { "name": "Use \"equal to\" operator", "value": 1 },
            { "name": "Use \"not equal to\" operator", "value": 1 },
            { "name": "Use \"less than\" operator", "value": 1 },
            { "name": "Use \"greater than\" operator", "value": 1 },
            { "name": "Use \"less than or equal to\" operator", "value": 1 },
            { "name": "Use \"greater than or equal to\" operator", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Boolean",
      "children": [
        {
          "name": "Boolean Values",
          "children": [
            {
              "name": "Recoganise Boolean Values as True and False",
              "value": 1
            },
            { "name": "Apply Boolean Values to individual events", "value": 1 },
            { "name": "Use Boolean Values in a Statement", "value": 1 },
            { "name": "Use Boolean Values in Maths", "value": 1 }
          ]
        },
        {
          "name": "Boolean Operations",
          "children": [
            { "name": "Recognise the Boolean operator \"NOT\"", "value": 1 },
            { "name": "Recognise the Boolean operator \"AND\"", "value": 1 },
            { "name": "Recognise the Boolean operator \"OR\"", "value": 1 },
            { "name": "Recognise the Boolean operator \"XOR\"", "value": 1 },
            { "name": "Use the Boolean operator \"NOT\"", "value": 1 },
            { "name": "Use the Boolean operator \"AND\"", "value": 1 },
            { "name": "Use the Boolean operator \"OR\"", "value": 1 },
            { "name": "Use the Boolean operator \"XOR\"", "value": 1 },
            {
              "name": "Create an algorithm by using the Boolean operators \"And\", \"Not\" and \"Or\"",
              "value": 1
            },
            { "name": "Describe a Boolean expression", "value": 1 }
          ]
        },
        {
          "name": "Boolean Expressions",
          "children": [
            { "name": "Use Boolean expressions in IF Statements", "value": 1 },
            { "name": "Use Boolean expressions in Loops", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Conditionals",
      "children": [
        {
          "name": "Simple Conditionals",
          "children": [
            {
              "name": "Explain what a conditional decision is in a Flow Chart",
              "value": 1
            }
          ]
        },
        {
          "name": "IF statements",
          "children": [
            {
              "name": "Demonstrate Boolean values True or False in IF Statement",
              "value": 1
            },
            {
              "name": "Demonstrate IF statement connecting multiple events",
              "value": 1
            },
            {
              "name": "Demonstrate a selection statement incuding an ELSE Statement",
              "value": 1
            },
            { "name": "Demonstrate nested selection statements", "value": 1 },
            {
              "name": "Demonstrate how ELIF can be used to check another condition",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Loops",
      "children": [
        {
          "name": "Loop Basics",
          "children": [
            {
              "name": "Demonstrate Loops are repetitions of events",
              "value": 1
            },
            {
              "name": "Demonstrate the sequences of looping events",
              "value": 1
            },
            { "name": "Demonstrate optimisation of loops", "value": 1 }
          ]
        },
        {
          "name": "Count controlled loops (FOR)",
          "children": [
            {
              "name": "Explain that a \"FOR\" Loop is count controlled, with a predetermined stop point",
              "value": 1
            },
            {
              "name": "Discuss how a \"FOR\" Loop holds the current index as a variable",
              "value": 1
            },
            {
              "name": "Discuss how a \"FOR\" Loop uses the break command to leave early",
              "value": 1
            },
            {
              "name": "Explain that a \"FOR\" Loop uses an \"ELSE\" statement make a section of code run when once the loop is successful",
              "value": 1
            },
            {
              "name": "Be able to explain the purpose of a given \"FOR\" Loop in code",
              "value": 1
            },
            {
              "name": "Create FOR loops to solve simple real-life problems",
              "value": 1
            }
          ]
        },
        {
          "name": "Event controlled loops (While)",
          "children": [
            {
              "name": "Explain that While loops are event controlled, the event controls when it stops. Not always pretermined.",
              "value": 1
            },
            {
              "name": "Illustrate how While loops can use comparators to determine the stop point",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Flowcharts",
      "children": [
        {
          "name": "Flowchart Basics",
          "children": [
            {
              "name": "Explain the basic elements of a Flowchart: Start, End & Actions",
              "value": 1
            },
            {
              "name": "Explain additional elements in a Flowchart: Conditional, Input/Output, and Event",
              "value": 1
            },
            {
              "name": "Create an algorithm using a Flowchart and blocks for start, end, conditional, input/output, event",
              "value": 1
            },
            {
              "name": "Describe a Flowchart with connections and relations",
              "value": 1
            },
            {
              "name": "Create a Flowchart with loops and changing of events",
              "value": 1
            },
            { "name": "Apply flowcharts in real life problems ", "value": 1 },
            {
              "name": "Illustrate the decomposition of problems into flowcharts",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Functions",
      "children": [
        {
          "name": "Function Basics",
          "children": [
            {
              "name": "Demonstrate functions as a machine, with inputs and outputs",
              "value": 1
            },
            {
              "name": "Demonstrate functions as lists of code, sequence of events",
              "value": 1
            },
            {
              "name": "Illustrate how functions have repeatability and can be called into action",
              "value": 1
            },
            {
              "name": "Create an algorithm showing Function formatting (repeat, nesting)",
              "value": 1
            },
            {
              "name": "Create an algorithm showing Function formatting (define, indent)",
              "value": 1
            }
          ]
        },
        {
          "name": "Function Concepts",
          "children": [
            {
              "name": "Discuss how Functions can have inputs, and how they are used within the code structure",
              "value": 1
            },
            {
              "name": "Discuss how Functions can return elements to the point of Function call",
              "value": 1
            },
            {
              "name": "Demonstrate nested elements within a Function (if)",
              "value": 1
            },
            {
              "name": "Demonstrate nested elements within a Function (for)",
              "value": 1
            },
            {
              "name": "Demonstrate nested elements within a Function (while)",
              "value": 1
            }
          ]
        },
        {
          "name": "Function uses and relations",
          "children": [
            {
              "name": "Be able to use the print function in a solution",
              "value": 1
            },
            {
              "name": "Be able to use the range function in a solution",
              "value": 1
            },
            {
              "name": "Be able to use the int function in a solution ",
              "value": 1
            },
            {
              "name": "Be able to use the input function in a solution ",
              "value": 1
            },
            {
              "name": "Be able to use the remove function in a solution ",
              "value": 1
            },
            {
              "name": "Describe how Min finds minumum, Max finds maximum",
              "value": 1
            },
            {
              "name": "Explain how an eval() function performs maths operations on an expression",
              "value": 1
            },
            {
              "name": "Use the eval() function to perform math operations on an expression",
              "value": 1
            },
            {
              "name": "Explain that a lambda function is a small anonymous function.",
              "value": 1
            },
            { "name": "Use the lambda() function", "value": 1 },
            {
              "name": "Recognise the different components of a Python function i.e. def, name and code",
              "value": 1
            },
            { "name": "Be able to return values from a function", "value": 1 },
            {
              "name": "Differentiate between inputs, parameters and arguments",
              "value": 1
            },
            { "name": "Create default values accurately", "value": 1 },
            {
              "name": "Recognise and use common built-in functions i.e. print, input, range, len",
              "value": 1
            },
            {
              "name": "Differentiate between inner and outer functions of nested functions",
              "value": 1
            },
            {
              "name": "Understand variable accessibility from within nested functions",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Data Structures",
      "children": [
        {
          "name": "Array Basic Concepts",
          "children": [
            {
              "name": "Explain that an Array has a name and indices",
              "value": 1
            },
            {
              "name": "Use the array index to locate an element in an array",
              "value": 1
            }
          ]
        },
        {
          "name": "Single Dimensional Arrays ",
          "children": [
            { "name": "Update a value in an array", "value": 1 },
            { "name": "Swap values in an array", "value": 1 },
            {
              "name": "Performing operations on a list - i.e Sorting ",
              "value": 1
            }
          ]
        },
        {
          "name": "Two Dimensional Arrays ",
          "children": [
            {
              "name": "Explain the features of a two dimensional array index",
              "value": 1
            },
            {
              "name": "Use the array index to locate an element in a two dimensional  array",
              "value": 1
            },
            { "name": "Create a Two dimensional array index", "value": 1 },
            {
              "name": "Describe Swapping values in two dimensional array",
              "value": 1
            },
            {
              "name": "Create an algorithm to Swap values in two dimensional array",
              "value": 1
            }
          ]
        },
        {
          "name": "Coordinate Systems",
          "children": [
            {
              "name": "Describe the feature of a coordinate system ",
              "value": 1
            },
            {
              "name": "Use coordinates to locate a point in a coordinate system ",
              "value": 1
            },
            {
              "name": "Use coordinates for a point in a coordinate system",
              "value": 1
            }
          ]
        },
        {
          "name": "Operations",
          "children": [
            {
              "name": "Be able to append content to the end of a data structure (.append())",
              "value": 1
            },
            {
              "name": "Be able to find the length of a data structure (.len())",
              "value": 1
            },
            {
              "name": "Be able to find an item within a collection (.index())",
              "value": 1
            },
            {
              "name": "Be able to remove an item from a collection (del)",
              "value": 1
            },
            {
              "name": "Be able to retrieve an item from a collection using its index",
              "value": 1
            }
          ]
        },
        {
          "name": "Tuples",
          "children": [
            {
              "name": "Explain that Tuples are used to store multiple items in a single variable.",
              "value": 1
            },
            { "name": "Be able to create a Tuple", "value": 1 },
            {
              "name": "Explain the structure of a Tuple ( ) with the usage of round brackets",
              "value": 1
            },
            {
              "name": "Explain that Tuples are collections of ordered information",
              "value": 1
            },
            {
              "name": "Explain that Tuples are immutable (unchangeable) ",
              "value": 1
            },
            {
              "name": "Explain that Tuples allow for duplicate values",
              "value": 1
            },
            {
              "name": "Explain that Tuples can have a variety of different datatypes",
              "value": 1
            },
            {
              "name": "Explain the differences between a List/Array and a Tuple",
              "value": 1
            },
            {
              "name": "Compare and contrast use of Tuples and Lists/Array",
              "value": 1
            }
          ]
        },
        {
          "name": "Sets",
          "children": [
            {
              "name": "Explain the structure of a set {} with the usage of curly brackets",
              "value": 1
            },
            {
              "name": "Explain that sets are collections of unordered information",
              "value": 1
            },
            {
              "name": "Explain that tuples are immutable* (unchangeable) ",
              "value": 1
            },
            {
              "name": "Explain that sets cannot contain duplicate values",
              "value": 1
            },
            { "name": "Print an entire Set to screen", "value": 1 },
            { "name": "Add an item to a Set", "value": 1 },
            { "name": "Remove an item from a Set", "value": 1 },
            {
              "name": "Explain that Sets can have a variety of different datatypes",
              "value": 1
            },
            { "name": "Compare and contrast use of Sets and Lists", "value": 1 }
          ]
        },
        {
          "name": "Set Operations",
          "children": [
            { "name": "Describe a Union operation", "value": 1 },
            { "name": "Apply a Union operation on two Sets", "value": 1 },
            { "name": "Describe an Intersection operation", "value": 1 },
            {
              "name": "Apply an Intersection operation on two Sets",
              "value": 1
            },
            { "name": "Describe a Complement operation", "value": 1 },
            { "name": "Apply a Complement operation on one Set", "value": 1 }
          ]
        },
        {
          "name": "Sets and Venn Diagrams",
          "children": [
            { "name": "Describe Venn diagrams", "value": 1 },
            { "name": "Draw and interpret Venn diagrams", "value": 1 },
            {
              "name": "Explain the Set operations using a Venn diagram",
              "value": 1
            },
            {
              "name": "Draw a Venn diagram and work out Set problems in real life",
              "value": 1
            }
          ]
        },
        {
          "name": "Dictionaries",
          "children": [
            {
              "name": "Explain the structure of a Dictionary {} with the usage of curly brackets and differentiate between key and value pairs",
              "value": 1
            },
            {
              "name": "Print an entire Dictionary and a value to screen",
              "value": 1
            },
            { "name": "Add an item to a Dictionary", "value": 1 },
            { "name": "Delete an item from a Dictionary", "value": 1 }
          ]
        },
        {
          "name": "Collections",
          "children": [
            {
              "name": "Compare and contrast Lists, Tuples, Sets and Dictionaries",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Queues & Stacks",
      "children": [
        {
          "name": "Queues",
          "children": [
            { "name": "Explain the concept of Queues", "value": 1 },
            {
              "name": "Demonstrate how Queues follow FIFO (First In First Out) principles",
              "value": 1
            },
            { "name": "Explain the concept of Queue relations", "value": 1 },
            {
              "name": "Demonstate Queue Functions Enqueue and Dequeue ",
              "value": 1
            },
            {
              "name": "Use a buffer Queue to reoder the items in a Queue",
              "value": 1
            },
            {
              "name": "Demonstrate and Explain how to merge two sorted Queues to be one sorted Queue",
              "value": 1
            }
          ]
        },
        {
          "name": "Stacks",
          "children": [
            { "name": "Explain the concept of Stacks", "value": 1 },
            {
              "name": "Demonstrate how Stacks follow LIFO (Last In First Out principles)",
              "value": 1
            },
            {
              "name": "Use stack relations, push and pop from the stack",
              "value": 1
            },
            {
              "name": "Use a buffer stack to reorder the items in a queue",
              "value": 1
            },
            {
              "name": "Demonstrate and Explain how to merge two sorted stacks to be one sorted stack",
              "value": 1
            }
          ]
        },
        {
          "name": "Queues and Stacks",
          "children": [
            {
              "name": "Combine Queues and Stacks to solve problems",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Strings",
      "children": [
        {
          "name": "String basics",
          "children": [
            {
              "name": "Demonstrate how Strings hold characters, symbols, word or sentences",
              "value": 1
            },
            {
              "name": "Be able to use indices to locate individual characters in a string",
              "value": 1
            },
            {
              "name": "Be able to identify the validity of a string",
              "value": 1
            }
          ]
        },
        {
          "name": "String operations",
          "children": [
            {
              "name": "Illustrate the division of strings to substrings",
              "value": 1
            },
            {
              "name": "Use string related functions, append, extend, remove, sort etc",
              "value": 1
            },
            {
              "name": "Be able to permutate a string to find an anagram of a string",
              "value": 1
            }
          ]
        },
        {
          "name": "String Operations",
          "children": [
            {
              "name": "Be able to use a carriage return '/r' to move the cursor to the beginning of the same line",
              "value": 1
            },
            {
              "name": "Be able to use a new line operator '/n' to move the cursor down one line",
              "value": 1
            },
            {
              "name": "Be able to use a string placeholder '%s' to insert string data into a string",
              "value": 1
            },
            {
              "name": "Be able to use a numeric placeholder '%d' to insert numeric data into a string",
              "value": 1
            },
            {
              "name": "Be able to differentiate the different outputs when using arithmetic operators on Strings and Integers and a combination of both",
              "value": 1
            },
            {
              "name": "Be able to take in user input and cast the inputs from String to either int or float",
              "value": 1
            },
            {
              "name": "Demonstrate in-built functions that modify the case of a String i.e. upper(), lower(), title(), capitalize()",
              "value": 1
            },
            {
              "name": "Demonstrate in-built functions that alter Strings or output findings i.e. split(), strip(), count(), replace()",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Tree Stucture",
      "children": [
        {
          "name": "Tree Structure Basics",
          "children": [
            { "name": "Describe Tree structures", "value": 1 },
            {
              "name": "Explain Tree node names such as Root, Parent, Child, Leaf and Sibling",
              "value": 1
            },
            {
              "name": "Explain Tree branches and their relationships",
              "value": 1
            }
          ]
        },
        {
          "name": "Use of a tree structure",
          "children": [
            {
              "name": "Identify and discuss tree structures in everyday life, such as family tree, various hierarchies, etc.",
              "value": 1
            },
            {
              "name": "Use tree structures to model some concepts in everyday life, e.g., family tree, various hierarchies, etc.",
              "value": 1
            }
          ]
        },
        {
          "name": "Tree Traverse",
          "children": [
            {
              "name": "Explain breadth first search in Tree structures (Left subtree - then right)",
              "value": 1
            },
            {
              "name": "Operate breadth first search in Tree structures (Left subtree - then right)",
              "value": 1
            },
            {
              "name": "Explain depth first search in Tree structures (one level of children nodes then repeat)",
              "value": 1
            },
            {
              "name": "Operate depth first search in Tree structures (one level of children nodes then repeat)",
              "value": 1
            },
            {
              "name": "Differentiate breadth first search and depth first search in a tree",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Heaps",
      "children": [
        {
          "name": "Heap Basics",
          "children": [
            {
              "name": "Explain how the heap is a special case of trees",
              "value": 1
            }
          ]
        },
        {
          "name": "Heap Operations",
          "children": [
            { "name": "Execute heapify the heaps", "value": 1 },
            { "name": "Insert a new element to a heap", "value": 1 },
            { "name": "Extract the root from a heap", "value": 1 },
            { "name": "Apply heaps to real life applications", "value": 1 },
            { "name": "Identify parent nodes in a data heap", "value": 1 },
            { "name": "Identify child nodes in a data heap", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Ciphers and codes",
      "children": [
        {
          "name": "Cipher Basics",
          "children": [
            {
              "name": "Explain the term cryptography and ciphers as the science of secret messages",
              "value": 1
            },
            {
              "name": "Explain the concept and use of a key for encryption and decryption",
              "value": 1
            },
            { "name": "Explain the term Encryption", "value": 1 },
            { "name": "Explain the term Decryption", "value": 1 },
            { "name": "Explain the term plaintext", "value": 1 },
            { "name": "Create a program to encode a message", "value": 1 },
            { "name": "Create a program to decode a message", "value": 1 }
          ]
        },
        {
          "name": "Binary code",
          "children": [
            {
              "name": "Discuss the relationship between on and off, 1 and 0",
              "value": 1
            },
            { "name": "Demonstrate you can Count in binary", "value": 1 },
            { "name": "Describe Binary number conversion", "value": 1 },
            { "name": "Execute Binary number conversion", "value": 1 },
            {
              "name": "Execute binary to denary conversion and back. ",
              "value": 1
            },
            {
              "name": "Complete Denary to Binary Conversation and back.  ",
              "value": 1
            },
            {
              "name": "Complete  binary to hexadecimal conversion and back.",
              "value": 1
            },
            {
              "name": "Explain the process of creating a program to convert decimal into denary",
              "value": 1
            },
            {
              "name": "Explain the process of creating a program to convert denary into decimal",
              "value": 1
            }
          ]
        },
        {
          "name": "Morse code",
          "children": [
            {
              "name": "Discuss relations; dits and dahs, dots and dashes",
              "value": 1
            },
            {
              "name": "Complete alphabetic conversion to morse code",
              "value": 1
            },
            {
              "name": "Encode morse code to letters using the decode tree",
              "value": 1
            }
          ]
        },
        {
          "name": "Caesar Shifting Ciphers",
          "children": [
            {
              "name": "Demonstrate the dial of Caesar shifting cipher",
              "value": 1
            },
            {
              "name": "Encode and decode the Caesar shifting cipher",
              "value": 1
            }
          ]
        },
        {
          "name": "Vigenère Cipher",
          "children": [
            {
              "name": "Explain the Vigenère Cipher and its use of a keyword for encryption",
              "value": 1
            },
            {
              "name": "Encryption and decrypt a Vigenère Cipher using a keyword",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Modules/Libraries",
      "children": [
        {
          "name": "Module Basics",
          "children": [
            {
              "name": "Discuss why Modules/libraries are collections of useful functions",
              "value": 1
            },
            {
              "name": "Use Modules/libraries and related functions to improve programs",
              "value": 1
            },
            {
              "name": "Choose and import Modules/libraries that are fit for purpose when creating an algorithm",
              "value": 1
            },
            {
              "name": "Combine Modules/libraries functions when creating algorithms.",
              "value": 1
            },
            {
              "name": "Explain the different methods of 'importing' libraries and using the correct syntax to call their functions",
              "value": 1
            }
          ]
        },
        {
          "name": "Turtle Module/Library",
          "children": [
            {
              "name": "Import and use cases of the turtle library in an algorithm",
              "value": 1
            },
            {
              "name": "Use Turtle related functions (draw, lift, drop, circle, colour)",
              "value": 1
            },
            {
              "name": "Combine computational ideas and Turtle functions",
              "value": 1
            },
            {
              "name": "Use the turtle library to draw common shapes",
              "value": 1
            }
          ]
        },
        {
          "name": "PyGame Module/Library",
          "children": [
            {
              "name": "Import and use cases of the PyGame library",
              "value": 1
            },
            {
              "name": "Use PyGame related functions and building (loading, attaching)",
              "value": 1
            },
            {
              "name": "Use PyGame related functions and building (removing, sprites)",
              "value": 1
            },
            { "name": "PyGame related game creation principles", "value": 1 }
          ]
        },
        {
          "name": "PyGame  Module/Library",
          "children": [
            {
              "name": "Use a interface (such as a mouse or keyboard) to define/change the position of an element",
              "value": 1
            },
            { "name": "Implement a 'clock' or framerate (FPS)", "value": 1 }
          ]
        },
        {
          "name": "Math Module/Library",
          "children": [
            { "name": "Import and use cases for the math library", "value": 1 },
            {
              "name": "Use math related functions and expressions (ceil, floor)",
              "value": 1
            },
            {
              "name": "Use the math library to assist in refining or filtering your data",
              "value": 1
            },
            {
              "name": "Use the math library in conjuction with other functions (casting, nesting, expressions)",
              "value": 1
            }
          ]
        },
        {
          "name": "Time  Module/Library",
          "children": [
            { "name": "Use cases for the Time library", "value": 1 },
            {
              "name": "Use time related functions and expressions (time, strptime, ctime)",
              "value": 1
            },
            {
              "name": "Use the time library in conjuction with other functions, fetching the time for different applications",
              "value": 1
            },
            {
              "name": "Use the time library as a method to present time taken for a result",
              "value": 1
            },
            {
              "name": "Use the time library to convert time into different formats or time zones",
              "value": 1
            }
          ]
        },
        {
          "name": "Turtle  Module/Library",
          "children": [
            {
              "name": "Explain that the turtle moves based a set number of inputted pixels",
              "value": 1
            },
            {
              "name": "Explain the comparison between a 'turtle' and a pen",
              "value": 1
            }
          ]
        },
        {
          "name": "tkinter Module/Library",
          "children": [
            {
              "name": "Import and use cases for the tkinter library",
              "value": 1
            },
            {
              "name": "Use tkinter related functions and building (grid, label, button, screen)",
              "value": 1
            },
            {
              "name": "Create simple buttons and events within tkinter",
              "value": 1
            },
            {
              "name": "Position items using a coordinate and grid system within a window",
              "value": 1
            },
            {
              "name": "Create and manipulate text within a tkinter window",
              "value": 1
            }
          ]
        },
        {
          "name": "Random Module/Library",
          "children": [
            {
              "name": "Import and use cases for the Random library",
              "value": 1
            },
            {
              "name": "Use Random related functions and building (randint, randrange)",
              "value": 1
            },
            {
              "name": "Explain why it is inherently difficult to create randomness on a computer",
              "value": 1
            }
          ]
        },
        {
          "name": "MatplotLib Module/Library",
          "children": [
            {
              "name": "Import and use cases for the MatPlotLib library",
              "value": 1
            },
            {
              "name": "Use MatPlotLib related functions and building (bar, pie, line, title, label, show)",
              "value": 1
            },
            {
              "name": "Combine database/table structures with MatPlotLob to display data in relevant formats",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Recursion",
      "children": [
        {
          "name": "Recursion Basics",
          "children": [
            {
              "name": "Explain that recursion is breaking down a bigger problem into smaller self-calling pieces",
              "value": 1
            },
            {
              "name": "Demonstrate a self-concluding recursive action",
              "value": 1
            },
            { "name": "Apply recursion to solve problems", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "OOP (object oriented programming)",
      "children": [
        {
          "name": "OOP Basics",
          "children": [
            {
              "name": "Ability to decompose a problem into objects and classes",
              "value": 1
            },
            { "name": "Explain how an object is created", "value": 1 },
            { "name": "Explain why we use objects in programs", "value": 1 },
            {
              "name": "Explain that objects have both behaviours and attributes",
              "value": 1
            },
            {
              "name": "Explain the term class and its relation to objects",
              "value": 1
            },
            {
              "name": "Explain the comparison of a class as a blueprint to an object",
              "value": 1
            },
            { "name": "Create a blank object constructor", "value": 1 },
            { "name": "Create attributes within an object (self)", "value": 1 },
            { "name": "Explain the term constructor", "value": 1 },
            {
              "name": "Explain that constructor is initialised upon creation of an object",
              "value": 1
            },
            {
              "name": "Explain that a method is a function within a class",
              "value": 1
            },
            {
              "name": "Be able to instantiate a class to create an object",
              "value": 1
            },
            { "name": "Be able to define a method within a class", "value": 1 },
            { "name": "Be able to call methods within a class", "value": 1 },
            {
              "name": "Explain the relation between keyboard events and object calls",
              "value": 1
            }
          ]
        },
        {
          "name": "Encapsulation",
          "children": [
            {
              "name": "Demonstrate Hiding data implementation by restricting access to public methods",
              "value": 1
            },
            {
              "name": "Explain the concept of encapsulating an object to protect certain elements",
              "value": 1
            },
            {
              "name": "Explain the difference between public and private methods",
              "value": 1
            },
            { "name": "Create and call public methods", "value": 1 },
            { "name": "Create and call private methods", "value": 1 }
          ]
        },
        {
          "name": "Abstraction",
          "children": [
            {
              "name": "Creating concepts that are not associated with any particular instance",
              "value": 1
            },
            {
              "name": "Explain the concept of Abstraction, only exposing elements that are needed",
              "value": 1
            },
            {
              "name": "Be able to breakdown an elements into set of pieces that should be either public or private",
              "value": 1
            },
            { "name": "Be able to create public variables", "value": 1 },
            { "name": "Be able to create private variables", "value": 1 }
          ]
        },
        {
          "name": "Inheritance",
          "children": [
            {
              "name": "Discuss the relationship between two objects, specifically inheritance",
              "value": 1
            },
            {
              "name": "Explain the concept of inheritance as it relates to real world objects",
              "value": 1
            },
            {
              "name": "Explain the concept of inheritance reusing common set of logic across multiple objects",
              "value": 1
            },
            {
              "name": "Explain the relation between a parent class and a child class",
              "value": 1
            },
            {
              "name": "Create a child class that inherits from a parent class",
              "value": 1
            },
            {
              "name": "Create common methods that should be inherited in a given scenario",
              "value": 1
            }
          ]
        },
        {
          "name": "Polymorphism",
          "children": [
            {
              "name": "Create a One name many forms, single interface to represent multiple different types",
              "value": 1
            },
            {
              "name": "Explain the concept of polymorphism, a child retaining or overwriting their own methods when inheriting",
              "value": 1
            },
            {
              "name": "Create a polymorphic class that inherits from a parent some elements",
              "value": 1
            },
            {
              "name": "Explain that the same name can be used to overwrite common methods to make them unique to a child class",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Sorting",
      "children": [
        {
          "name": "Introduction to Sorting",
          "children": [
            {
              "name": "Discuss how groups of items or data can be clustered into groups",
              "value": 1
            },
            {
              "name": "Show how numbers can be sorted and scaled based on group average",
              "value": 1
            }
          ]
        },
        {
          "name": "Sort with a Buffer",
          "children": [
            {
              "name": "Explain that one or more buffers may be needed to help with sorting ",
              "value": 1
            },
            {
              "name": "Explain and demostrate sorting using one buffer",
              "value": 1
            }
          ]
        },
        {
          "name": "Bubble Sort",
          "children": [
            {
              "name": "Discuss how bubble sort exchanges adjacent pairs of data",
              "value": 1
            },
            {
              "name": "Explain that in bubble sort bigger data moves to the end. It is similar to bigger bubbles emerging to the surface ",
              "value": 1
            },
            {
              "name": "Explain and demostrate sorting using bubble sort",
              "value": 1
            },
            {
              "name": "Explain how the ‘Bubble Sort’ algorithm works",
              "value": 1
            },
            {
              "name": "Be able to reproduce a Bubble sort of a given data structure",
              "value": 1
            }
          ]
        },
        {
          "name": "Heap Sort",
          "children": [
            {
              "name": "Explain that heap sort can be used to sort a set of data",
              "value": 1
            },
            {
              "name": "Demonstrate how Heap sort constructs and maintains a heap and the current min or max is removed from the heap in each round",
              "value": 1
            },
            {
              "name": "Explain that Heap sort is more efficient than bubble sort",
              "value": 1
            }
          ]
        },
        {
          "name": "Merge Sort",
          "children": [
            { "name": "Explain the concept of merging items", "value": 1 },
            {
              "name": "Be able to reproduce a Merge sort of a given data structure",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Searching",
      "children": [
        {
          "name": "Searching Introduction",
          "children": [
            {
              "name": "Explain and demonstrate why searching is important and very useful in everyday life",
              "value": 1
            }
          ]
        },
        {
          "name": "Random Search",
          "children": [
            {
              "name": "Explain and demonstrate that searching for items at random is unpredictable and inefficient",
              "value": 1
            },
            { "name": "Explain how a random search works", "value": 1 }
          ]
        },
        {
          "name": "Linear Search",
          "children": [
            { "name": "Explain how linear search works ", "value": 1 },
            {
              "name": "Explain that the linear search is better than random search but it is still inefficient",
              "value": 1
            },
            {
              "name": "Explain how a linear search algorithm operates",
              "value": 1
            },
            {
              "name": "Be able to reproduce a linear search of a given data structure",
              "value": 1
            }
          ]
        },
        {
          "name": "Binary Search",
          "children": [
            {
              "name": "Explain how a Binary search involves sorting a list first",
              "value": 1
            },
            {
              "name": "Demonstrate Binary search {halves the search space in each round}",
              "value": 1
            },
            {
              "name": "Discuss why a Binary search is more efficient than linear search",
              "value": 1
            },
            {
              "name": "Explain how a Binary search algorithm operates",
              "value": 1
            },
            {
              "name": "Be able to reproduce a Binary search of a given data structure",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Computer Systems",
      "children": [
        {
          "name": "Hardware",
          "children": [
            {
              "name": "Discuss the purpose of hardware devices such as CPU",
              "value": 1
            },
            {
              "name": "Describe and explain the various characteristics of a CPU ",
              "value": 1
            },
            {
              "name": "Expain how characteristsics effect the performance of the CPU.",
              "value": 1
            },
            {
              "name": "Explain the purpose and characteristics of embedded systems",
              "value": 1
            },
            { "name": "Identify examples of embedded systems", "value": 1 }
          ]
        },
        {
          "name": "Software classification",
          "children": [
            {
              "name": "To understand the purpose of an operating system.",
              "value": 1
            },
            {
              "name": "To understand that an operating system provides processor management.",
              "value": 1
            },
            {
              "name": "To understand that an operating system provides memory management.",
              "value": 1
            },
            {
              "name": "To understand that an operating system provides device management.",
              "value": 1
            },
            {
              "name": "To understand that an operating system provides application management.",
              "value": 1
            },
            {
              "name": "To understand that an operating system provides security management.",
              "value": 1
            },
            {
              "name": "Explain the need for, and functions of utility programs. ",
              "value": 1
            },
            { "name": "Compare utility and application software.", "value": 1 },
            {
              "name": "Describe the purpose of application software.",
              "value": 1
            },
            {
              "name": "Explain what is meant by system software and application software, giving examples of both types of software.",
              "value": 1
            }
          ]
        },
        {
          "name": "Systems architecture",
          "children": [
            {
              "name": "Expain the characteristics and roles of RAM",
              "value": 1
            },
            {
              "name": "Expain the characteristics and roles of ROM",
              "value": 1
            },
            {
              "name": "Expain the characteristics and roles of Cache Register ",
              "value": 1
            },
            {
              "name": "Expain the characteristics and roles of Virtual Memory. ",
              "value": 1
            },
            {
              "name": "Explain what the different types of memory are used for and why they are required.",
              "value": 1
            },
            { "name": "Explain the term main memory", "value": 1 },
            { "name": "Explain the term secondary storage", "value": 1 },
            {
              "name": "Compare main memory and secondary storage.",
              "value": 1
            },
            {
              "name": "Compare RAM (volatile memory) and ROM (non-volatile memory).",
              "value": 1
            },
            {
              "name": "Explain why secondary storage is required.",
              "value": 1
            },
            {
              "name": "Explain the Von Neumann architecture in separating the program from the machine.",
              "value": 1
            },
            { "name": "Describe an ‘Instruction Set’", "value": 1 },
            { "name": "Explain the CPU Fetch process", "value": 1 },
            { "name": "Explain the CPU Decode process", "value": 1 },
            { "name": "Explain the CPU Execute process", "value": 1 },
            { "name": "Illustrate the Fetch-Decode-Execute cycle", "value": 1 },
            {
              "name": "Explain roles of specialised CPU registers during the Fetch-Decode-Execute cycle.",
              "value": 1
            },
            { "name": "Explain the term 'cloud storage'", "value": 1 },
            { "name": "Describe 'cloud computing'.", "value": 1 },
            { "name": "Define secondary storage.", "value": 1 },
            { "name": "Describe Solid State Storage", "value": 1 },
            { "name": "Describe Optical Storage", "value": 1 },
            { "name": "Describe Magnetic Storage", "value": 1 },
            {
              "name": "Explain the operation of solid state, optical and magnetic storage.",
              "value": 1
            },
            {
              "name": "Discuss the advantages and disadvantages of solid state, optical and magnetic storage.",
              "value": 1
            },
            {
              "name": "Explain the term 'NAS - Network Attached Storage'.",
              "value": 1
            },
            {
              "name": "Explain the advantages and disadvantages of cloud storage when compared to local storage.",
              "value": 1
            },
            { "name": "Define the term main memory", "value": 1 },
            { "name": "Define RAM", "value": 1 },
            { "name": "Define ROM", "value": 1 },
            { "name": "Define CACHE Memory", "value": 1 },
            { "name": "Explain the purpose of CACHE memory", "value": 1 },
            { "name": "Define primary storage", "value": 1 },
            { "name": "Define Virtual Memory", "value": 1 },
            { "name": "Explain what capacitors are used for", "value": 1 },
            { "name": "Explain what transistors are used for.", "value": 1 },
            {
              "name": "Compare and contrast capacitors and transistors",
              "value": 1
            },
            { "name": "Define the Von Neumann architecture", "value": 1 },
            {
              "name": "Explain the role and operation of a central processing unit (CPU) within the Von Neumann architecture",
              "value": 1
            },
            {
              "name": "Explain the effect of the following on the performance of the CPU: clock speed",
              "value": 1
            },
            {
              "name": "Explain the effect of the following on the performance of the CPU: number of processor",
              "value": 1
            },
            {
              "name": "Explain the effect of the following on the performance of the CPU: cores ",
              "value": 1
            },
            {
              "name": "Explain the effect of the following on the performance of the CPU: cache type",
              "value": 1
            },
            {
              "name": "Explain the effect of the following on the performance of the CPU: cache size",
              "value": 1
            },
            {
              "name": "Explain the role of a CPU’s instruction set.",
              "value": 1
            },
            { "name": "Explain the CISC CPU instruction set", "value": 1 },
            { "name": "Explain the RISC CPU instruction set.", "value": 1 },
            {
              "name": "Compare and contrast the CISC and RISC CPU’s instruction sets.",
              "value": 1
            },
            {
              "name": "Discuss the advantages and disadvantages of each type of processor (RISC and CISC).",
              "value": 1
            }
          ]
        },
        {
          "name": "Boolean logic",
          "children": [
            {
              "name": "Construct truth tables for the following logic gates NOT ",
              "value": 1
            },
            {
              "name": "Construct truth tables for the following logic gates AND ",
              "value": 1
            },
            {
              "name": "Construct truth tables for the following logic gates OR",
              "value": 1
            },
            {
              "name": "Construct truth tables for the following logic gates XOR",
              "value": 1
            },
            {
              "name": "Construct truth tables for simple logic circuits.",
              "value": 1
            },
            {
              "name": "Interpret the results of simple truth tables.",
              "value": 1
            },
            {
              "name": "Create, modify and interpret simple logic circuit diagrams.",
              "value": 1
            },
            {
              "name": "Create and interpret simple Boolean expressions made up of NOT, AND, OR and XOR operations.",
              "value": 1
            },
            {
              "name": "Create the Boolean expression for a simple logic circuit.",
              "value": 1
            },
            {
              "name": "Create a logic circuit from a simple Boolean expression.",
              "value": 1
            },
            {
              "name": "Be able to indentify the 'AND' logic gate and its operation",
              "value": 1
            },
            {
              "name": "Be able to indentify the 'OR' logic gate and its operation",
              "value": 1
            },
            {
              "name": "Be able to indentify the 'NOT' logic gate and its operation",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Counting by Listing",
      "children": [
        {
          "name": "Counting using a tree structure",
          "children": [
            {
              "name": "List all the possibilities using a tree structure",
              "value": 1
            },
            {
              "name": "Count all the possibilities using the tree structure",
              "value": 1
            }
          ]
        },
        {
          "name": "Counting using a multi-edge graph",
          "children": [
            {
              "name": "List all the possibilities using a multi-edge graph",
              "value": 1
            },
            {
              "name": "Count all the possibilities using the multi-edge graph",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Logical inference",
      "children": [
        {
          "name": "Implication relation",
          "children": [
            {
              "name": "Discuss the implication relation - if A happens,  then B will happen ",
              "value": 1
            },
            {
              "name": "Complete the inverse and converse of the implication relation - if B did not happen,  then A did not happen ",
              "value": 1
            },
            {
              "name": "Apply the implication relation several times to infer a result",
              "value": 1
            }
          ]
        },
        {
          "name": "Inference using a table",
          "children": [
            {
              "name": "Use a 'database' table to record the facts",
              "value": 1
            },
            {
              "name": "Determine the contradictory parts in the logic within a table of data",
              "value": 1
            },
            {
              "name": "Determine the unknown facts within a table of data",
              "value": 1
            }
          ]
        },
        {
          "name": "Inference using a graph",
          "children": [
            { "name": "Use a graph to record the facts", "value": 1 },
            {
              "name": "Determine the contradictory parts in the logic from a graph",
              "value": 1
            },
            { "name": "Determine the unknown facts from a graph", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Winning Strategies",
      "children": [
        {
          "name": "Game concepts",
          "children": [
            {
              "name": "Explain the games and strategies via a story",
              "value": 1
            },
            { "name": "Use game strategies on a card game", "value": 1 }
          ]
        },
        {
          "name": "Winning via working backwards",
          "children": [
            {
              "name": "Explain why in some games, there is a way to work backwards to find the winning strategies",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Balance Problems",
      "children": [
        {
          "name": "Introduction to Balance Problem",
          "children": [
            {
              "name": "Introduce the concept of balance via a story",
              "value": 1
            },
            {
              "name": "Comparing the weights between two items on a balance",
              "value": 1
            }
          ]
        },
        {
          "name": "Balance substitute",
          "children": [
            {
              "name": "Explain that two sides can be equalised if the balance is balanced.",
              "value": 1
            },
            {
              "name": "Demonstrate how to find a solution when a problem is blanaced",
              "value": 1
            },
            {
              "name": "Demonstrate how to find a solution when a problem is not blanaced",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Periodic phenomenon",
      "children": [
        {
          "name": "Periodic activities",
          "children": [
            {
              "name": "Discuss how  many everyday activities are periodic, e.g., pendulum motions, earth rotation, etc ",
              "value": 1
            },
            {
              "name": "Identify and explain the periodic phenomenon in daily life by giving examples",
              "value": 1
            }
          ]
        },
        {
          "name": "Link periodity with division",
          "children": [
            {
              "name": "Explain that the period is the divisor and the remainder is crucial in solving the problems with periods",
              "value": 1
            },
            {
              "name": "Use division and the remainder to solve problems with periods",
              "value": 1
            }
          ]
        },
        {
          "name": "Use periodity to solve problems",
          "children": [
            {
              "name": "Analyse the periods in a problem and apply division to solve the problem",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "AI (Artificial Intelligence)",
      "children": [
        {
          "name": "AI Basics",
          "children": [
            {
              "name": "Explain the term 'intelligent' as it relates to the real world",
              "value": 1
            },
            {
              "name": "Describe who 'Alan Turing' is and his contributions to recognising computer as intelligent",
              "value": 1
            },
            {
              "name": "Explain the term 'search' in relation to AI, solving a problem by finding the best possible solution",
              "value": 1
            },
            {
              "name": "Explain the term 'logic' in relation to AI, solving problems by making informed guesses or inference",
              "value": 1
            },
            {
              "name": "Explain the term 'uncertainty' in relation to AI, making guesses about the environment through probabilities",
              "value": 1
            },
            {
              "name": "Explain the term 'learning' in relation to AI, improving a systems performance over time",
              "value": 1
            },
            { "name": "Explain the outcome of a Zero-Sum game", "value": 1 },
            {
              "name": "Apply Artificial Intelligence concepts to flow chart out a problem for a machine to learn",
              "value": 1
            },
            { "name": "Be able to categorise items as an AI would", "value": 1 }
          ]
        },
        {
          "name": "Minimax",
          "children": [
            {
              "name": "Explain the term Minimax, a search algorithm that finds the next optimal move",
              "value": 1
            },
            {
              "name": "Explain that minimax operates on a graph structure following paths until the optimal move is found",
              "value": 1
            },
            {
              "name": "Explain the concept of an AI agent and how it relates to a Minimax game",
              "value": 1
            },
            {
              "name": "Explain a maximising and minimising player",
              "value": 1
            },
            {
              "name": "Demonstrate the process to score a graph using the same process a Minimax algorithm will take",
              "value": 1
            },
            {
              "name": "Be able to reproduce a basic Minimax game with a player and human operator",
              "value": 1
            }
          ]
        },
        {
          "name": "Machine Learning",
          "children": [
            {
              "name": "Explain the term machine learning and how it relates to the real world",
              "value": 1
            },
            {
              "name": "Explain unsupervised learning, an agent being left to figure out a task on its own",
              "value": 1
            },
            {
              "name": "Explain supervised learning, an agent being assisted with prompts to figure out a task",
              "value": 1
            },
            { "name": "Explain the process of training an agent", "value": 1 },
            {
              "name": "Explain the term classification, assigning classes (labels) to items",
              "value": 1
            }
          ]
        },
        {
          "name": "Neural Networks",
          "children": [
            {
              "name": "Explain the supervised learning algorithm 'Neural Networks'",
              "value": 1
            },
            {
              "name": "Explain how a neural network structure relates to the networks within our own brains",
              "value": 1
            },
            {
              "name": "Explain how a weight affects the outcome of a neural network",
              "value": 1
            },
            {
              "name": "Explain how weights in neural networks are processed by a function and an output is produced",
              "value": 1
            },
            {
              "name": "Explain the input layers of a neural network and their function",
              "value": 1
            },
            {
              "name": "Explain the hidden layers of a neural network and their function",
              "value": 1
            },
            {
              "name": "Explain the output layers of a neural network and their function",
              "value": 1
            },
            {
              "name": "Be able to create and train a basic neural network model",
              "value": 1
            },
            {
              "name": "Explain the term epoch as used to describe training a neural network",
              "value": 1
            }
          ]
        },
        {
          "name": "Reinforcement Learning",
          "children": [
            {
              "name": "Explain the concept of reinforced learning",
              "value": 1
            },
            {
              "name": "Explain the concept of positive reinforcement and its real life examples",
              "value": 1
            },
            {
              "name": "Explain the concept of negative reinforcement and its real life examples",
              "value": 1
            },
            {
              "name": "Be able to break down and maximise the rewards for a given path with reinforced learning",
              "value": 1
            },
            {
              "name": "Be able to reproduce a simple reinforced learning algorithm",
              "value": 1
            },
            { "name": "Explain a constrained environment", "value": 1 },
            {
              "name": "Explain why a Q-Table is used to record information",
              "value": 1
            },
            {
              "name": "Explain how a Q-table can be used to count the maximum rewards for a situation",
              "value": 1
            }
          ]
        },
        {
          "name": "Image Processing",
          "children": [
            {
              "name": "Explain the idea of computer image processing",
              "value": 1
            },
            {
              "name": "Explain how a computer sees images as a collection of pixels",
              "value": 1
            },
            {
              "name": "Explain that a pixel is the smallest item of a digital image",
              "value": 1
            },
            {
              "name": "Explain that a pixel is a collection of colour values",
              "value": 1
            },
            { "name": "Be able to load an image into memory", "value": 1 },
            {
              "name": "Be able to convert an image into greyscale",
              "value": 1
            },
            {
              "name": "Be able to flip an image across either axis",
              "value": 1
            },
            {
              "name": "Be able to invert the colours displayed in an image",
              "value": 1
            },
            {
              "name": "Be able to use a dataset of images to merge the common features across them",
              "value": 1
            }
          ]
        },
        {
          "name": "Object Detection",
          "children": [
            {
              "name": "Explain the concept of computational object detection",
              "value": 1
            },
            {
              "name": "Explain that the input of object detection can be an image or scenario with several objects",
              "value": 1
            },
            { "name": "Explain the contract of a bounding box", "value": 1 },
            {
              "name": "Explain that the output of object detection can be bounding boxes with classification labels",
              "value": 1
            },
            {
              "name": "Explain an agent can have a confidence in its detection outputs",
              "value": 1
            },
            {
              "name": "Be able to reproduce a simple common object detection on an image",
              "value": 1
            }
          ]
        },
        {
          "name": "Emotion Recognition",
          "children": [
            {
              "name": "Be able to reproduce a simple emotion detection on an image",
              "value": 1
            },
            {
              "name": "Be able to reproduce a multiple confidence emotion detection on an image",
              "value": 1
            },
            {
              "name": "Explain the concept of computational emotion detection",
              "value": 1
            },
            {
              "name": "Explain the similarities and differences between object and emotion recognition",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Databases",
      "children": [
        {
          "name": "Data Analysis",
          "children": [
            { "name": "Be able to assess data from a table", "value": 1 },
            {
              "name": "Be able to identify outliers in a set of data",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Exceptions",
      "children": [
        {
          "name": "Exception Basics",
          "children": [
            { "name": "Explain an Exception within a program", "value": 1 },
            {
              "name": "Explain what problems can cause exception within a program",
              "value": 1
            },
            {
              "name": "Be able to catch an exception when it occurs",
              "value": 1
            },
            {
              "name": "Be able to handle an exception when it occurs",
              "value": 1
            },
            {
              "name": "Be able to use the 'try' and 'except' keywords",
              "value": 1
            },
            {
              "name": "Explain the use of an 'Else' statement following an exception statement",
              "value": 1
            },
            {
              "name": "Explain the use of a 'Finally' statement following an exception statement",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Functional Programming",
      "children": [
        {
          "name": "Game Concepts",
          "children": [
            {
              "name": "Use events to handle input from the user to control a scene",
              "value": 1
            },
            {
              "name": "Explain the concept of updating or switching a frame to update a scene",
              "value": 1
            },
            {
              "name": "Create and delete a basic set of shapes in a scene (rectangle, circle, triangle)",
              "value": 1
            },
            {
              "name": "Explain the relation between coordinate systems and pixel mapping on a screen",
              "value": 1
            },
            {
              "name": "Explain how music files are stored and loaded into a program",
              "value": 1
            },
            {
              "name": "Load a music or audio file from a given path on a system",
              "value": 1
            },
            {
              "name": "Explain image 'hitboxes' or 'surfaces' and how these define the area of an image or font",
              "value": 1
            },
            {
              "name": "Load and use a surface to place an image or font in a scene",
              "value": 1
            },
            {
              "name": "Explain how a scoreboard is functionally set up to quickly read and write from a file",
              "value": 1
            },
            { "name": "Read and return a hierarchy from a file", "value": 1 },
            { "name": "Explain the concept of a sprite", "value": 1 },
            { "name": "Load a sprite into memory", "value": 1 },
            {
              "name": "Use the surface of a sprite to 'draw' or 'blit' it onto a screen",
              "value": 1
            },
            {
              "name": "Explain the concept of 'clocks' and 'ticks' within game and their function of controlling the speed of a program",
              "value": 1
            },
            {
              "name": "Explain the term 'FPS' or Frames Per Second",
              "value": 1
            },
            {
              "name": "Demonstrate how to establish a clock to control the framerate of a scene",
              "value": 1
            },
            {
              "name": "Explain what a frame rate (FPS) is and how it relates to movement on a screen",
              "value": 1
            },
            {
              "name": "Explain what a comfortable/ideal framerate (FPS) is ",
              "value": 1
            },
            {
              "name": "Explain the differences between a low and high framerate (FPS)",
              "value": 1
            },
            {
              "name": "Explain the comparison between framerate and a flipbook",
              "value": 1
            },
            {
              "name": "Explain that an object on a screen has a bondary or bounding box of coordinates that defines its size",
              "value": 1
            },
            {
              "name": "Demonstrate how to collect inputs from the keyboard an mouse",
              "value": 1
            },
            {
              "name": "Explain that a mouse or cursors position on a screen is represented as a coordinate in pixels",
              "value": 1
            },
            {
              "name": "Explain how a program must handle an event",
              "value": 1
            },
            {
              "name": "Explain the concept of a game loop and how it controls the display",
              "value": 1
            },
            {
              "name": "Be able to identify and conclude a game loop",
              "value": 1
            }
          ]
        },
        {
          "name": "Style",
          "children": [
            {
              "name": "Explain how indentation is a way to show that a group of statements belong to a particular block of code",
              "value": 1
            },
            {
              "name": "Demonstrate how to spot indentation errors in a block of code",
              "value": 1
            },
            {
              "name": "Create basic code with correct indentation",
              "value": 1
            },
            {
              "name": "Create complex nested code with correct indentation",
              "value": 1
            },
            {
              "name": "Explain CamelCase as a format of writing code in a legible way, ArrayOfAnimals",
              "value": 1
            },
            {
              "name": "Explain SnakeCase as a format of writing code in a legible way, array_of_animals",
              "value": 1
            },
            {
              "name": "Create a descriptive comment for a block of code",
              "value": 1
            },
            {
              "name": "Create a multi-line comment for a block of code",
              "value": 1
            },
            {
              "name": "Explain that coding style can be unique to an programmer",
              "value": 1
            }
          ]
        },
        {
          "name": "Keywords",
          "children": [
            {
              "name": "Explain the term keyword and how it defines the recognised words in a programming language",
              "value": 1
            },
            {
              "name": "Explain the continue keyword and its use to skip an iteration or operation",
              "value": 1
            },
            {
              "name": "Explain the finally keyword and its use to execute a section of code upon completion of the previous",
              "value": 1
            },
            {
              "name": "Explain the return keyword and its use to bring back a result from a called action",
              "value": 1
            },
            {
              "name": "Demonstrate how to spot and use keywords in a program",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "GUI (Graphic User Interface)",
      "children": [
        {
          "name": "GUI Basics",
          "children": [
            {
              "name": "Explain the term GUI (Graphical User Interface)",
              "value": 1
            },
            {
              "name": "Explain common interactions we use everyday with a GUI",
              "value": 1
            },
            {
              "name": "Explain UX (User eXperience) finding the best usability for your application",
              "value": 1
            },
            {
              "name": "Be able to map out a user experience to a flowchart of events",
              "value": 1
            },
            {
              "name": "Be able to map out commonly used portions  of an application, such as a grid of buttons with similar events",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Data Representation",
      "children": [
        {
          "name": "Colours",
          "children": [
            {
              "name": "Explain that a colour can be held as a set of Red, Blue and Green codes (RGB)",
              "value": 1
            },
            {
              "name": "Explain that RGB has a max value of 255 - 8 Bit Colour",
              "value": 1
            },
            {
              "name": "Be able to recite and define common RGB colour codes",
              "value": 1
            }
          ]
        },
        {
          "name": "Typography",
          "children": [
            { "name": "Be able to load and use a Font ", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Algorithm Concepts",
      "children": [
        {
          "name": "Algorithms Basics",
          "children": [
            {
              "name": "Explain that an algorithm is a set of instructions used to complete a task",
              "value": 1
            },
            {
              "name": "Explain that an algorithm is the process of solving a problem - separate from any language, the process of a solution",
              "value": 1
            },
            { "name": "Be able to reproduce a simple algorithm", "value": 1 },
            {
              "name": "Be able to map an algorithm out into a flowchart of events",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Fundamentals of data representation",
      "children": [
        {
          "name": "Number bases",
          "children": [
            {
              "name": "Explain the denary or decimal number system (Base 10)",
              "value": 1
            },
            { "name": "Explain the binary number system (Base 2)", "value": 1 },
            {
              "name": "Explain the hexadecimal number system. (Base 16)",
              "value": 1
            },
            {
              "name": "Complete conversions between decimal, hexadecimal and binary",
              "value": 1
            },
            {
              "name": "Explain why the hexadecimal number system is used in computer science",
              "value": 1
            },
            {
              "name": "Explain why computers use binary to represent all data and instructions",
              "value": 1
            }
          ]
        },
        {
          "name": "Data compression",
          "children": [
            { "name": "Explain what data compression is", "value": 1 },
            {
              "name": "Explain why data may be compressed and that there are different ways to compress data.",
              "value": 1
            },
            { "name": "Describe Lossy Compression", "value": 1 },
            { "name": "Describe Lossless Compression", "value": 1 },
            {
              "name": "Explain how data can be compressed using Huffman coding.",
              "value": 1
            },
            { "name": "Interpret/create Huffman trees", "value": 1 },
            {
              "name": "Calculate the number of bits required to store a piece of data compressed using Huffman coding.",
              "value": 1
            },
            {
              "name": "Calculate the number of bits required to store a piece of uncompressed data in ASCII",
              "value": 1
            },
            {
              "name": "Explain how data can be compressed using run length encoding (RLE)",
              "value": 1
            },
            {
              "name": "Represent data in RLE frequency/data pairs.",
              "value": 1
            },
            {
              "name": "Explain how data can be compressed using Dictionary Coding",
              "value": 1
            },
            {
              "name": "Discuss the advantages and disadvantages of Dictionary Coding",
              "value": 1
            },
            { "name": "Explain why we need to encrypt data.", "value": 1 },
            { "name": "Demonstrate how the Caesar Cypher works.", "value": 1 },
            {
              "name": "Compare symmetric and asymmetric encryption.",
              "value": 1
            }
          ]
        },
        {
          "name": "Units of information",
          "children": [
            {
              "name": "Explain that the bit is the fundamental unit of information",
              "value": 1
            },
            { "name": "Explain that a byte is a group of 8 bits.", "value": 1 },
            {
              "name": "Explain that quantities of bytes can be described using prefixes.",
              "value": 1
            },
            {
              "name": "Identify the names, symbols and corresponding values for the  kilo, 1 kB is 1,000 bytes mega",
              "value": 1
            },
            {
              "name": "Identify the names, symbols and corresponding values for the mega, 1 MB is 1,000 kilobytes",
              "value": 1
            },
            {
              "name": "Identify the names, symbols and corresponding values for the giga, 1 GB is 1,000 Megabytes",
              "value": 1
            },
            {
              "name": "Identify the names, symbols and corresponding values for the tera, 1 TB is 1,000 Gigabytes.",
              "value": 1
            }
          ]
        },
        {
          "name": "Representing images",
          "children": [
            {
              "name": "Describe what a pixel is and be able to describe how pixels relate to an image and the way images are displayed on a computer system.",
              "value": 1
            },
            { "name": "Explain what is meant by colour depth", "value": 1 },
            {
              "name": "Describe that a bitmap can be descirbed by its size in pixels",
              "value": 1
            },
            {
              "name": "Describe that a bitmap can be descirbed by its colour depth. ",
              "value": 1
            },
            {
              "name": "Explain that the size of a bitmap image in pixels (width x height) is known as the image resolution.",
              "value": 1
            },
            {
              "name": "Illustrate image resolutsion using the size of a bitmap image in pixels (width x height).",
              "value": 1
            },
            {
              "name": "Explain how ‘image resolution’ affects an image’s quality and file size.",
              "value": 1
            },
            {
              "name": "Describe how a bitmap represents an image using pixels and colour depth.",
              "value": 1
            },
            {
              "name": "Describe using examples how the number of pixels and colour depth can affect the file size of a bitmap image.",
              "value": 1
            },
            {
              "name": "Calculate bitmap image file sizes based on the number of pixels and colour depth.",
              "value": 1
            },
            { "name": "Explain what image meta data is", "value": 1 }
          ]
        },
        {
          "name": "Representing sound",
          "children": [
            {
              "name": "Describe how sound is analogue and that it must be converted to a digital form for storage and processing in a computer.",
              "value": 1
            },
            {
              "name": "Explain that sound waves are sampled to create the digital version of sound.",
              "value": 1
            },
            {
              "name": "Describe the digital representation of sound in terms of sampling rate",
              "value": 1
            },
            {
              "name": "Describe the digital representation of sound in terms of sample resolution.",
              "value": 1
            },
            {
              "name": "Calculate sound file sizes based on the sampling rate and the sample resolution.",
              "value": 1
            },
            { "name": "Explain what is meant by ‘bit rate’.", "value": 1 },
            {
              "name": "Illustrate how ‘bit rate’ affects a sound file’s quality and size.",
              "value": 1
            },
            {
              "name": "Calculate the file size of a sound file if its ‘bit rate’ and ‘sample rate’ are known.",
              "value": 1
            }
          ]
        },
        {
          "name": "Character encoding",
          "children": [
            { "name": "Explain what a character set is", "value": 1 },
            {
              "name": "Explain the limitations with the ASCII character set.",
              "value": 1
            },
            {
              "name": "Describe the 7-bit ASCII character encoding method",
              "value": 1
            },
            {
              "name": "Describe the Unicode character encoding method",
              "value": 1
            },
            {
              "name": "Explain that character codes are commonly grouped and run in sequence within encoding tables.",
              "value": 1
            },
            { "name": "Describe the purpose of Unicode ", "value": 1 },
            {
              "name": "Explain the advantages of Unicode over ASCII. ",
              "value": 1
            },
            {
              "name": "Identify Unicode uses the same codes as ASCII up to 127.",
              "value": 1
            },
            {
              "name": "Identify that all data must eventually be translated into 1 and 0's (Binary)",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Fundamentals of Algorithms",
      "children": [
        {
          "name": "Representing Algorithms",
          "children": [
            { "name": "Explain the purpose of an input.", "value": 1 },
            { "name": "Explain the purpose of an output.", "value": 1 },
            {
              "name": "Reproduce assigning an input and using it as an output ",
              "value": 1
            },
            { "name": "Explain the term algorithm.", "value": 1 },
            { "name": "Explain the term decomposition.", "value": 1 },
            {
              "name": "Use a systematic approach to problem solving and algorithm creation ",
              "value": 1
            },
            {
              "name": "Represent algorithms using pseudo-code.  Interpret pseudo-code algorithms.",
              "value": 1
            },
            {
              "name": "Use trace tables to determine how algorithms work and what their purpose is.",
              "value": 1
            },
            {
              "name": "Explain simple algorithms in terms of their inputs, processing and outputs.",
              "value": 1
            },
            {
              "name": "Representing selection algorithms using pseudo-code.",
              "value": 1
            },
            {
              "name": "Representing selection algorithms using flowcharts.",
              "value": 1
            },
            { "name": "Explain the term Pseudocode", "value": 1 },
            { "name": "Explain and demonstrate a truth table", "value": 1 }
          ]
        },
        {
          "name": "Searching Algorithms",
          "children": [
            {
              "name": "Compare and contrast linear and binary search algorithms.",
              "value": 1
            }
          ]
        },
        {
          "name": "Sorting Algorithms",
          "children": [
            {
              "name": "Illustrate in pseudocode how to create a bubble sort algorithm. ",
              "value": 1
            },
            {
              "name": "Explain how the ‘Merge Sort’ algorithm works.",
              "value": 1
            },
            {
              "name": "Illustrate the steps to sort a set of data with merge sort.",
              "value": 1
            },
            { "name": "Read/trace the merge sort algorithm. ", "value": 1 },
            {
              "name": "Compare and contrast merge sort and bubble sort algorithms.",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Programming",
      "children": [
        {
          "name": "Programming Concepts",
          "children": [
            {
              "name": "Explain the purpose of a function in programming",
              "value": 1
            },
            {
              "name": "Describe the use of parameters to pass data within programs.",
              "value": 1
            },
            {
              "name": "Use subroutines that require more than one parameter.",
              "value": 1
            },
            {
              "name": "Describe how data is passed to a subroutine using parameters",
              "value": 1
            },
            {
              "name": "Explain the difference between functions and procedures.",
              "value": 1
            },
            {
              "name": "Create and breakdown a function or procedure in programming.",
              "value": 1
            },
            {
              "name": "Explain the purpose of a definite (count-controlled) loop (FOR).",
              "value": 1
            },
            {
              "name": "Use a definite loop with count-controlled conditions.",
              "value": 1
            },
            {
              "name": "Use the range function when combined with a loop.",
              "value": 1
            },
            {
              "name": "Use and create nested iteration structures with definite loops",
              "value": 1
            },
            {
              "name": "Explain the purpose of a indefinite (condition-controlled) loop (WHILE).",
              "value": 1
            },
            {
              "name": "Use a indefinite loop with condition-controlled conditions.",
              "value": 1
            },
            {
              "name": "Use of the operators when combined with an indefinite and definite loop",
              "value": 1
            },
            {
              "name": "Use of the Strings when combined with an indefinite loop",
              "value": 1
            },
            { "name": "Create a subroutine (procedure/function).", "value": 1 },
            { "name": "To explain a procedure.", "value": 1 },
            {
              "name": "Describe the difference between functions and procedures.",
              "value": 1
            },
            {
              "name": "Have the ability to create and breakdown a procedure.",
              "value": 1
            },
            {
              "name": "Demonstrate and explain how the following statement types can be combined in programs: sequence, iteration,and selection",
              "value": 1
            },
            { "name": "Describe the program construct selection", "value": 1 },
            { "name": "Use and create alogrithms using selection", "value": 1 },
            {
              "name": "Identify common programming concept within a block of code",
              "value": 1
            },
            {
              "name": "Identify the correct structural flow of a program",
              "value": 1
            },
            { "name": "Be able to a idenitify recurring pattern", "value": 1 },
            { "name": "Explain the concept of a nested element", "value": 1 }
          ]
        },
        {
          "name": "Subrountines (procedures and functions)",
          "children": [
            { "name": "Explain the purpose of modules.", "value": 1 },
            { "name": "Describe when a module should be created.", "value": 1 },
            {
              "name": "Reproduce the importing and use of a module",
              "value": 1
            },
            { "name": "Describe the concept of subroutines.", "value": 1 },
            {
              "name": "Explain the advantages of using subroutines in programs.",
              "value": 1
            },
            {
              "name": "Describe the use of parameters to pass data within programs.",
              "value": 1
            },
            {
              "name": "Use subroutines that return values to the calling routine.",
              "value": 1
            }
          ]
        },
        {
          "name": "Arithmetic operations in a programming language",
          "children": [
            {
              "name": "Illustrate modulus division and quotient division.",
              "value": 1
            },
            {
              "name": "Use arithmetic operators within their own programs ",
              "value": 1
            },
            {
              "name": "Interpret arithmetic operators when used within algorithms.",
              "value": 1
            },
            {
              "name": "Use comparison operators within their own programs ",
              "value": 1
            },
            {
              "name": "Interpret comparison operators when used within algorithms.",
              "value": 1
            }
          ]
        },
        {
          "name": "Relational operations in a programming language",
          "children": [
            {
              "name": "Use relational operations within their own programs -  equal to",
              "value": 1
            },
            {
              "name": "Use relational operations within their own programs -   not equal to",
              "value": 1
            },
            {
              "name": "Use relational operations within their own programs -  less than",
              "value": 1
            },
            {
              "name": "Use relational operations within their own programs -  greater than",
              "value": 1
            },
            {
              "name": "Use relational operations within their own programs -  less than or equal to",
              "value": 1
            },
            {
              "name": "Use relational operations within their own programs -greater than or equal to",
              "value": 1
            },
            { "name": "Be able to identify relational operators", "value": 1 }
          ]
        },
        {
          "name": "Data Types",
          "children": [
            {
              "name": "Create and interpret string operations in algorithms, using strings appropriately",
              "value": 1
            },
            {
              "name": "Use strings  appropriately within their own programs",
              "value": 1
            },
            {
              "name": "Understand boolean and use it appropriately",
              "value": 1
            }
          ]
        },
        {
          "name": "Classification of programming languages",
          "children": [
            { "name": "Explain the concept of machine code", "value": 1 },
            { "name": "Explain the concept of assembly language", "value": 1 },
            {
              "name": "Explain why machine code and assembly language are considered to be low-level languages ",
              "value": 1
            },
            {
              "name": "Explain the differences between machine code and assembly language .",
              "value": 1
            },
            {
              "name": "Explain why all programming code written in high-level or assembly languages must be translated into machine code.",
              "value": 1
            },
            {
              "name": "Identify the three common types of program translator [interpreter compiler assembler]. ",
              "value": 1
            },
            {
              "name": "Identify the main differences between these three types of translator [interpreter compiler assembler]. ",
              "value": 1
            },
            {
              "name": "Explain when it would be appropriate to use each type of translator [interpreter compiler assembler]. ",
              "value": 1
            },
            {
              "name": "Describe how source code has to be translated into machine code in order for the CPU to be able to process the program.",
              "value": 1
            },
            { "name": "Explain a High level computer language", "value": 1 },
            { "name": "Explain a low level computer language", "value": 1 },
            {
              "name": "Compare and contrast High level language with low level langauge",
              "value": 1
            },
            {
              "name": "Compare how an interpreter and a compiler translate source code.",
              "value": 1
            },
            {
              "name": "Explain the importance of assembly language ",
              "value": 1
            },
            { "name": "Explain the role of an assembler.", "value": 1 },
            { "name": "Explain the role of an compiler.", "value": 1 },
            { "name": "Explain the role of an interpreter.", "value": 1 }
          ]
        },
        {
          "name": "Robust and secure programming",
          "children": [
            {
              "name": "Explain and be able to identify a syntax error ",
              "value": 1
            },
            {
              "name": "Explain and be able to identify a logic error ",
              "value": 1
            },
            {
              "name": "Contrast and compare different errors syntax error logic error.",
              "value": 1
            },
            {
              "name": "Be able to identify and categorise errors within algorithms and programs.",
              "value": 1
            },
            { "name": "Write simple data validation routines.", "value": 1 },
            { "name": "Write simple authentication routines.", "value": 1 },
            { "name": "Explain the term: Input Validation", "value": 1 },
            { "name": "Explain the term: Input Sanitation", "value": 1 },
            { "name": "Explain the term: Authentication", "value": 1 },
            { "name": "Explain the term: Maintainability", "value": 1 },
            {
              "name": "Describe the various strategies that programmers use to ensure that their programs are robust",
              "value": 1
            },
            { "name": "Use Input Validation for user inputs", "value": 1 },
            {
              "name": "Use Input Input Sanitation for user inputs",
              "value": 1
            },
            { "name": "Explain why errors or exceptions occur", "value": 1 },
            {
              "name": "Illustrate handling an exception when thrown",
              "value": 1
            }
          ]
        },
        {
          "name": "Input/Output and file handling",
          "children": [
            {
              "name": "Create an algorithm to read from/to a text file.",
              "value": 1
            },
            {
              "name": "Create an algorithm to write from/to a text file.",
              "value": 1
            },
            { "name": "Demonstrate the role of the cursor", "value": 1 },
            {
              "name": "Create a program to demonstrate the role of the file handler",
              "value": 1
            }
          ]
        },
        {
          "name": "Data Structures",
          "children": [
            {
              "name": "Use arrays (or equivalent) in the design of solutions to simple problems.",
              "value": 1
            },
            {
              "name": "Describe how data is stored in a one dimensional array",
              "value": 1
            },
            {
              "name": "Describe how data is stored in a two dimensional array",
              "value": 1
            },
            {
              "name": "Perfom operations on a one dimensional array",
              "value": 1
            },
            {
              "name": "Perfom operations on a two dimensional array",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Fundamentals of computer networks",
      "children": [
        {
          "name": "Fundamentals of computer networks",
          "children": [
            { "name": "Define the term ‘network protocol’.", "value": 1 },
            { "name": "Explain the link layer. ", "value": 1 },
            { "name": "Explain the internet layer", "value": 1 },
            { "name": "Explain the transport layer", "value": 1 },
            { "name": "Explain the application layer", "value": 1 },
            {
              "name": "Describe the 4 layer TCP/IP model: application layer transport layer internet layer link layer. ",
              "value": 1
            },
            {
              "name": "Decribe HTTP (Hypertext Transfer Protocol)",
              "value": 1
            },
            {
              "name": "Decribe HTTPS (Hypertext Transfer Protocol Secure)",
              "value": 1
            },
            {
              "name": "Describe SMTP (Simple Mail Transfer Protocol)",
              "value": 1
            },
            {
              "name": "Describe IMAP (Internet Message Access Protocol)",
              "value": 1
            },
            { "name": "Describe FTP (File Transfer Protocol)", "value": 1 },
            { "name": "Describe IP (Internet Protocol)", "value": 1 },
            {
              "name": "Describe TCP (Transmission Control Protocol)",
              "value": 1
            },
            { "name": "Describe UDP (User Datagram Protocol)", "value": 1 },
            {
              "name": "Describe how the HTTP, HTTPS, SMTP, IMAP and FTP protocols operate at the application layer. ",
              "value": 1
            },
            {
              "name": "Describe how the TCP and UDP protocols operate at the transport layer.",
              "value": 1
            },
            {
              "name": "Understand that the IP protocol operates at the internet layer.",
              "value": 1
            },
            { "name": "Explain IP Addressing", "value": 1 },
            { "name": "Explain MAC Addressing", "value": 1 },
            { "name": "Explain a wired network ", "value": 1 },
            { "name": "Explain a wireless network", "value": 1 },
            {
              "name": "Explain why networks can be wired or wireless.",
              "value": 1
            },
            {
              "name": "Discuss the benefits and risks of wireless networks as opposed to wired networks.",
              "value": 1
            },
            {
              "name": "Explain the purpose and use of common network protocols for ethernet",
              "value": 1
            },
            {
              "name": "Explain the purpose and use of common network protocols for Wi-Fi ",
              "value": 1
            },
            {
              "name": "Explain how different data transfer mediums carry data.",
              "value": 1
            },
            {
              "name": "Explain how data is transmitted across a network.",
              "value": 1
            },
            {
              "name": "Explain what is meant by the term ‘protocol’.",
              "value": 1
            },
            { "name": "Define what a computer network is.", "value": 1 },
            { "name": "Describe a Local Area Network (LAN)", "value": 1 },
            {
              "name": "Explain the benefits and drawbacks of a LAN.",
              "value": 1
            },
            {
              "name": "Identify the devices required to form a network.",
              "value": 1
            },
            { "name": "Describe a Wide Area Network (WAN)", "value": 1 },
            {
              "name": "Explain the benefits and drawbacks of a WAN",
              "value": 1
            },
            {
              "name": "Explain the purpose of an Internet Service Provider (ISP)",
              "value": 1
            },
            { "name": "Describe an IP  Address", "value": 1 },
            {
              "name": "Discuss the benefits and risks of computer networks.",
              "value": 1
            },
            {
              "name": "Explain the following common network topology: STAR.",
              "value": 1
            },
            {
              "name": "Explain the following common network topology: BUS.",
              "value": 1
            },
            {
              "name": "Explain the following common network topology: MESH*.",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Relational databases and structured query language (SQL)",
      "children": [
        {
          "name": "Relational databases",
          "children": [
            { "name": "Explain the concept of a database.", "value": 1 },
            {
              "name": "Explain the concept of a relational database.",
              "value": 1
            },
            {
              "name": "Explain that the use of a relational database facilitates the elimination of data inconsistency and data redundancy.",
              "value": 1
            },
            { "name": "Describe database concept of tables", "value": 1 },
            { "name": "Describe database concept of records", "value": 1 },
            { "name": "Describe database concept of fields", "value": 1 },
            { "name": "Describe database concept of primary keys", "value": 1 },
            { "name": "Describe database concept of foreign keys", "value": 1 }
          ]
        },
        {
          "name": "Structured query language (SQL)",
          "children": [
            {
              "name": "Use SQL to retrieve data from a relational database, using the commands: SELECT FROM WHERE ORDER BY…ASC | DESC",
              "value": 1
            },
            {
              "name": "Use SQL to insert data into a relational database using the commands. INSERT INTO table_name (column1, column 2 …) VALUES (value1, value2 …) ",
              "value": 1
            },
            {
              "name": "Use SQL to edit and delete data in a database using the commands. UPDATE table_name SET column1 = value1, column2 = value2 ... WHERE condition DELETE FROM table_name WHERE condition",
              "value": 1
            },
            {
              "name": "Recognise and use the folowing data base concepts: table record field primary key foreign key.",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Fundamentals of cyber security",
      "children": [
        {
          "name": "Fundamentals of cyber security",
          "children": [
            { "name": "Be able to define the term cyber security", "value": 1 },
            {
              "name": "Describe the main purposes of cyber security",
              "value": 1
            }
          ]
        },
        {
          "name": "Cyber security threats",
          "children": [
            {
              "name": "Explain the cyber security threat of social engineering techniques",
              "value": 1
            },
            {
              "name": "Explain the cyber security threat of malicious code",
              "value": 1
            },
            {
              "name": "Explain the cyber security threat of weak and default passwords",
              "value": 1
            },
            {
              "name": "Explain the cyber security threat of misconfigured access rights",
              "value": 1
            },
            {
              "name": "Explain the cyber security threat of removable media",
              "value": 1
            },
            {
              "name": "Explain the  cyber security threat of unpatched and/or outdated software.",
              "value": 1
            },
            {
              "name": "Explain what penetration testing is and what it is used for.",
              "value": 1
            }
          ]
        },
        {
          "name": "Social engineering",
          "children": [
            { "name": "Define the term social engineering", "value": 1 },
            {
              "name": "Describe what social engineering is and how it can be protected against.",
              "value": 1
            },
            {
              "name": "Explain social engineering concept; blagging (pretexting)",
              "value": 1
            },
            {
              "name": "Explain social engineering concept: phishing",
              "value": 1
            },
            {
              "name": "Explain social engineering concept: pharming ",
              "value": 1
            },
            {
              "name": "Explain social engineering concept: shouldering (or shoulder surfing).",
              "value": 1
            }
          ]
        },
        {
          "name": "Malicious code",
          "children": [
            { "name": "Define the term 'malware'", "value": 1 },
            {
              "name": "Describe what malware is and how it can be protected against. ",
              "value": 1
            },
            {
              "name": "Describe a computer virus a form of malware",
              "value": 1
            },
            { "name": "Describe trojan a form of malware", "value": 1 },
            { "name": "Describe spyware a form of malware", "value": 1 },
            { "name": "Describe adware a form of malware", "value": 1 }
          ]
        },
        {
          "name": "Methods to detect and prevent cyber security threats",
          "children": [
            {
              "name": "Explain biometric security measures (particularly for mobile devices)",
              "value": 1
            },
            {
              "name": "Explain password systems security measures",
              "value": 1
            },
            {
              "name": "Explain CAPTCHA (or similar) security measures",
              "value": 1
            },
            {
              "name": "Explain using email confirmations to confirm a user’s identity as a security measure",
              "value": 1
            },
            {
              "name": "Explain automatic software updates as a form of security measure",
              "value": 1
            }
          ]
        }
      ]
    },
    {
      "name": "Aspects of software development",
      "children": [
        {
          "name": "Aspects of software development",
          "children": [
            {
              "name": "Describe how algorithms can be tested for the presence of errors, using normal (typical) data.",
              "value": 1
            },
            {
              "name": "Describe how algorithms can be tested for the presence of errors, using boundary (extreme) data.",
              "value": 1
            },
            {
              "name": "Describe how algorithms can be tested for the presence of errors, using erroneous data.",
              "value": 1
            },
            {
              "name": "Descibe the various errors that may occur during the development of software.",
              "value": 1
            },
            { "name": "Explain the purpose of software testing.", "value": 1 }
          ]
        }
      ]
    },
    {
      "name": "Ethical, legal and enviromental impacts of digital technology on wider society, including issues of privacy",
      "children": [
        {
          "name": "Ethical, legal and enviromental impacts of digital technology on wider society, including issues of privacy",
          "children": [
            {
              "name": "Discuss the impact of technology based around given issues.",
              "value": 1
            },
            {
              "name": "Describe the purpose of the  legislation and the specific actions it allows or prohibits  The Data Protection Act 2018.",
              "value": 1
            },
            {
              "name": "Describe the  purpose of the  legislation and the specific actions it allows or prohibits   Computer Misuse Act 1990.",
              "value": 1
            },
            {
              "name": "Describe the purpose of the legislation and the specific actions it allows or prohibits  Copyright Designs and Patents Act 1988  ",
              "value": 1
            },
            {
              "name": "Describe the purpose of the legislation and the specific actions it allows or prohibits   Software licences (i.e. open source and proprietary).",
              "value": 1
            },
            {
              "name": "Explain the current ethical, legal and environmental impacts and risks of digital technology on society.",
              "value": 1
            }
          ]
        }
      ]
    }
  ]
}
